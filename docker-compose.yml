version: '3.7'

services:
  # db:
  #   image: postgres
  #   container_name: postgres
  #   restart: always
  #   ports:
  #     - "54320:5432"
  #   # networks:
  #   #   - postgres
  #   environment:
  #     POSTGRES_USER: serge
  #     POSTGRES_PASSWORD: passpass
  #     POSTGRES_DB: mlruns
  #     PGDATA: /data/postgres
  #   volumes:
  #     - ./db:/data/postgres
  mflow_models_db:
    container_name: mysql_db
    image: mysql
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mlflow_models
      MYSQL_USER: serge
      MYSQL_PASSWORD: passpass
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - "./mysql:/var/lib/mysql"
    network_mode: host
  
  train_model:
    container_name: trianing_mlflow
    build: 
      context: .
      dockerfile: Dockerfile_mlflow
    command: dvc repro
    links:
      - "mflow_models:mlflow_models"
    # volumes:
    #   - "./mysql:/var/lib/mysql"
    network_mode: host
    depends_on:
        - mlflow_server

  mlflow_server:
    restart: always
    image: imranq2/mlflow_server
    container_name: mlflow_server
    network_mode: host
    expose:
        - 5000
    ports:
        - 5000:5000
    environment:
        # - BACKEND=mysql+pymysql://${DB_USER}:${DB_PW}@db:${DB_PORT}/${DB_NAME}
        - BACKEND=mysql+pymysql://serge:passpass@localhost:3306/mlflow_models
        - ARTIFACTS=/mlruns
    volumes:
        - ./mlruns:/mlruns
    command: 
        - sh    # (sh allows for var substitution of BACKEND and ARTIFACTS)
        - -c
        - mlflow server 
            --port 5000
            --host 127.0.0.1
            --backend-store-uri $${BACKEND} 
            --default-artifact-root $${ARTIFACTS}
    depends_on:
        - mflow_models_db